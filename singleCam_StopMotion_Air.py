



'''
purpose : 
    record single images from the left or right cameras and store them in a file 
    we are supposed to collect about 30-50 images per camera; the calibration chessboard should be circled in two half-spheres, each taken at different distances for the camera. The first is about 2 meters, the second is about 3-4 meters.
    The images should be tilted in 3dof in about 20 degrees on each axis 
    later they will be processed by the fishEyeCalibration.py
    
usage: 
uncomment the relevant lines  per left or right cameras 
make sure that the data is written to disk

Note
Use to fetch images from the air camera head via rtsp protocol when the camera is transmitting the data over WIFI on a local wifi network Â (the PC is disconnected from the LAN) and is connected to the air head hotspot) At this stage, we are connected to single  camera.
Note that there might be delays (  a single picture ao make sure the board is not moving 

'''


import cv2
import time 

#time.sleep(5)
CHECKERBOARD = (13,24)
#cap = cv2.VideoCapture  ('rtsp://192.168.3.88')# #left
cap = cv2.VideoCapture ('rtsp://192.168.2.89')  # right
num = 1
def scale(scale_percent,image): 
	 width = int(image.shape[1] * scale_percent / 100)
	 height = int(image.shape[0] * scale_percent / 100)
	 dim = (width, height)
	 resized = cv2.resize(image, dim, interpolation = cv2.INTER_AREA)
	 return resized 

def current_milli_time():
    return round(time.time() * 1000)
startTime= current_milli_time()

if  cap.isOpened():
    succes1, img = cap.read()  
    cv2.waitKey(1)

    if (current_milli_time()-startTime>10):        
        print(current_milli_time()-startTime)
        gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
        ret1, corners = cv2.findChessboardCorners(gray, CHECKERBOARD, cv2.CALIB_CB_ADAPTIVE_THRESH+cv2.CALIB_CB_FAST_CHECK+cv2.CALIB_CB_NORMALIZE_IMAGE)
        print (ret1)       
        if ret1:   
            #cv2.imwrite('cimages/stereoLeft/image_' + str(num)+'_Left_'+str(current_milli_time())+ '.png', img)
            print("savedL")
            cv2.imwrite('cimages/stereoRight/image_' + str(num)+'_Right_'+str(current_milli_time())+'.png', img)
            print("images saved!")
            startTime =current_milli_time()
        cv2.drawChessboardCorners(img, CHECKERBOARD, corners, ret1)         
    img = scale(20,img)
    cv2.imshow('Img 1',img)   
    cv2.waitKey(0)
    
    num += 1    

# Release and destroy all windows before termination
cap.release()


cv2.destroyAllWindows()




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































